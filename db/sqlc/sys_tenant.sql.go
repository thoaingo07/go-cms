// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: sys_tenant.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const addSysTenant = `-- name: AddSysTenant :one
INSERT INTO sys_tenant(
	unique_id, handle_id, code, name, description, session_timeout, created_date, created_by, created_by_name, updated_date, updated_by, updated_by_name)
	VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING id, unique_id, handle_id, code, name, description, session_timeout, created_date, created_by, created_by_name, updated_date, updated_by, updated_by_name
`

type AddSysTenantParams struct {
	UniqueID       uuid.NullUUID  `json:"unique_id"`
	HandleID       string         `json:"handle_id"`
	Code           sql.NullString `json:"code"`
	Name           sql.NullString `json:"name"`
	Description    sql.NullString `json:"description"`
	SessionTimeout sql.NullInt32  `json:"session_timeout"`
	CreatedDate    sql.NullTime   `json:"created_date"`
	CreatedBy      sql.NullInt32  `json:"created_by"`
	CreatedByName  sql.NullString `json:"created_by_name"`
	UpdatedDate    sql.NullTime   `json:"updated_date"`
	UpdatedBy      sql.NullInt32  `json:"updated_by"`
	UpdatedByName  sql.NullString `json:"updated_by_name"`
}

func (q *Queries) AddSysTenant(ctx context.Context, arg AddSysTenantParams) (SysTenant, error) {
	row := q.db.QueryRowContext(ctx, addSysTenant,
		arg.UniqueID,
		arg.HandleID,
		arg.Code,
		arg.Name,
		arg.Description,
		arg.SessionTimeout,
		arg.CreatedDate,
		arg.CreatedBy,
		arg.CreatedByName,
		arg.UpdatedDate,
		arg.UpdatedBy,
		arg.UpdatedByName,
	)
	var i SysTenant
	err := row.Scan(
		&i.ID,
		&i.UniqueID,
		&i.HandleID,
		&i.Code,
		&i.Name,
		&i.Description,
		&i.SessionTimeout,
		&i.CreatedDate,
		&i.CreatedBy,
		&i.CreatedByName,
		&i.UpdatedDate,
		&i.UpdatedBy,
		&i.UpdatedByName,
	)
	return i, err
}
